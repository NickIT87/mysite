            -==  ORM pt 1 l32  ==-

>>> from news.models import News, Category
>>> News.objects.all()                      # return QuerySet objects
>>> News.objects.order_by('-pk')            # ('pk') - order by id
>>> News.objects.all().reverse()
>>> News.objects.get(pk=1)                  # only 1 record
>>> News.objects.get(title='Новость 1')     # by key params
>>> news1 = _                               # <News: Новость 1>
>>> news1.is_published                      # True
>>> news1.category                          # <Category: Культура>
>>> news1.category.title                    # 'Культура'
>>> cat4 = Category.objects.get(pk=4)
>>> cat4.title                              # 'Наука'
>>> cat4.news_set.all()                     # QuerySet ...
    >>> cat2 = Category.objects.get(pk=2)
    >>> cat2.title                          # 'Спорт'
    >>> cat2.news_set.all()                 # <QuerySet [<News: Новость из формы 5>, ... ]>
    >>> news = _
    >>> for item in news:
    ...     print(item.is_published)
    ...
                                           # True
                                           # False
                                           # True
>>> cat2.news_set.all()                    # news_set => related_name="get_news" in model

            -==  ORM pt 2 l33 ==-

>>> News.objects.filter(pk__gt=12)                  # Field lookups - in docs,(greater then 12)
>>> News.objects.filter(title__contains='new')      # with register (not supported sqlite)
>>> News.objects.filter(title__icontains='new')     # no register
>>> News.objects.filter(pk__in=[3, 5, 7])           # search in range
>>> News.objects.filter(pk__in=[3, 5, 7], title__contains='формы')

            -==  ORM pt 3 l34 ==-

>>> News.objects.first()
>>> News.objects.order_by('pk').first()                     # ...('pk').last()
>>> cat2 = Category.objects.get(pk=2)
    >>> news = cat2.news_set.all()
    >>> newsf = cat2.news_set.filter(is_published=True)     # filtered news
>>> News.objects.earliest('updated_at')
>>> News.objects.latest('updated_at')
>>> cats = Category.objects.filter(pk__in=[1,2])            # filtered choice ==
    >>> News.objects.filter(category__in=cats)              # filtered choice ==
>>> cat5 = Category.objects.get(pk=5)
    >>> cat5.news_set.exists()                              # False
    >>> cat5.news_set.count()                               # 0 records
>>> News.objects.count()                                    # 11
>>> news = News.objects.get(pk=5)
    >>> news.get_previous_by_created_at()                   # <News: Новость из формы>
    >>> news.get_next_by_created_at()                       # <News: Новость из формы 3>
    >>> news.get_next_by_created_at(pk__gt=10)              # <News: Добавление фото после enctype="multipart/form-data">

            -==  ORM pt 4 l35 ==-

>>> News.objects.filter(category__title='Политика')                         # записи вторичной модели по ключу первичной
>>> Category.objects.filter(news__title__contains='формы')
>>> Category.objects.filter(news__is_published__contains=1).count()         # 10
    # found the necessary solution
        >>> Category.objects.filter(news__is_published__contains=1).annotate(cnt=Count('news'))
    # found the necessary solution
>>> Category.objects.filter(news__title__contains='формы').distinct()       # only unique records
>>> from django.db.models import Q                                          # | or, & and, ~ not
>>> News.objects.filter(Q(pk__in=[5, 6]) | Q(title__contains='2'))
    >>> News.objects.filter(Q(pk__in=[5, 6]) | Q(title__contains='5') & ~Q(pk__gt=8))
    >>> News.objects.filter(Q(pk__in=[5, 6]) | Q(title__contains='2') & ~Q(pk__lt=2))

            -==  ORM pt 5 l36 ==-

>>> ...